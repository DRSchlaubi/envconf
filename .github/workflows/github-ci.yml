# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
  pull_request:
    types:
      - opened
      - synchronize

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false"
      TARGET_BRANCH: ${{ github.event.pull_request.base.ref }}
      KORD_TEST_TOKEN: ${{ secrets.KORD_TEST_TOKEN }}
      BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}
      BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - run: export GRADLE_USER_HOME=`pwd`/.gradle
      - run: echo "name=RELEASE_TAG::${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Java JDK 1.8
        uses: actions/setup-java@v1.3.0
        with:
          java-version: 1.8

      - name: Gradle (Build)
        run: gradle --stacktrace --info --build-cache assemble

      - name: Caching
        uses: actions/cache@v2.0.0
        with:
          key: "$GITHUB_SHA"
          path: |
            ~/builds
            ~/build
            ~/.gradle
          # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      - name: Gradle (Testing)
        run: gradle --stacktrace --info jvmTest jsTest
  release:
    name: Publish artifacts
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    env:
      BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}
      BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
      ORG_GRADLE_PROJECT_signingKey: ${{ secrets.signingKey }}
      ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.signingPassword }}
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Publish with Gradle
        run: gradle publishAllPublicationsToMavenRepository
